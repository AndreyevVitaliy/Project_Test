from requests import Session
from zeep import Client
import xml.etree.ElementTree as ET
from zeep.transports import Transport
import telebot

taskArray = {}









def getUserTasks(userName):

    parameters = {'xml_input': userName}
    with client.settings(raw_response=True):
        response = client.service.TehZadanie(**parameters).content
        root = ET.fromstring(response)

    for a in root:
        for b in a:
            for c in b:
                resultXML = c.text

    rootResult = ET.fromstring(resultXML)

    for a in rootResult:
        guidDoc = a.text
        docDict = a.attrib
        taskArray[guidDoc] = docDict

    return taskArray


# #
# with client.settings(raw_response=True):
#      response = client.service.TehZadanie(**parameters).content
#      # print(response)
#      root = ET.fromstring(response)
#
#      for a in root:
#          for b in a:
#              # print(b)
#              for c in b:
#                 resultXML = c.text
#                 # print(resultXML)
#
#      rootResult = ET.fromstring(resultXML)
#      # print(rootResult)
#      for a in rootResult:
#          guidDoc = a.text
#          docDict = a.attrib
#          taskArray[guidDoc] = docDict
            # print(b.text)


     # parse = ET.parse(response)
     # print(root.attrib)
     # root = parse.getroot()
     # print(root)
     # print(sid[0].text)
     # xmlResult = xml.dom.minidom.parse(response)
#     #
    # print(xmlResult)

# print(client.transport.get('http://ivaa/Test_Kvarta/ws/test?wsdl','',''))

bot = telebot.TeleBot('')
# taskArray = {}
#
print()
# # print(taskArray)
# for i in [1, 2, 3, 4, 5]:
#     taskArray[i] = {'task':i, 'amount':i*2000, 'client':i}
#
# for pos in taskArray:
#     print(taskArray[pos])

    # print(pos)

# print(taskArray)

# @bot.message_handler(func=lambda message: message.document.mime_type == 'text/plain', content_types=['document'])
# def handle_text_doc(message):
# 	bot.send_message(message.chat.id, 'Любое сообщение')

#Этот обработчик получает любые сообщения и можем его заставить делать то, что нам нужно
@bot.message_handler(func=lambda message: True, content_types=['text'])
def echo_msg(message):
    bot.send_message(message.chat.id, message.text)

@bot.message_handler(commands=["Start"])
#главное меню
def startMenu(m):

    keyboard = telebot.types.ReplyKeyboardMarkup()
    keyboard.row('Заявки')
    keyboard.row('Технические задания')
    keyboard.row('Инфомация о договоре')
    keyboard.row('Данные клиента')

    bot.send_message(m.chat.id, 'Нажми кнопку',reply_markup=keyboard)

#
@bot.message_handler(func=lambda message: message.text == u'Технические задания')
def button(m):
    keyboard = telebot.types.ReplyKeyboardMarkup()
    keyboard.row('Все доступные')
    keyboard.row('< назад')

    bot.send_message(m.chat.id, 'Выберите вариант', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == u'Все доступные')
def buttonBack(m):

    getUserTasks('Шваб')
    keyboard = telebot.types.ReplyKeyboardMarkup()
    for k in taskArray:
        print(k)
        keyboard.row(str(taskArray[k]['Kontragent']) + ', сумма ' +  str(taskArray[k]['Summa']))

    keyboard.row('< назад')
    bot.send_message(m.chat.id, 'Выберите ТЗ', reply_markup=keyboard)
# #
# #
# # #
@bot.message_handler(func=lambda message: message.text == u'< назад')
def buttonBack(m):
    startMenu(m)
# #     # keyboard = telebot.types.ReplyKeyboardMarkup()
# #     # keyboard.row('123')
# #     #
# #     #
#     # bot.send_message(m.chat.id, ' Выбери вариант', reply_markup=keyboard)
#
#     # logging.info(m.chat.id)
#
# # def inline_key(num):
# #     """Функция для вывода кнопок
# #     """
# #     i=1
# #     btns = []
# #     while i<=num:
# #         btns.append(telebot.types.InlineKeyboardButton(text='Кнопка '+str(i+10), callback_data='butt'+str(i+10)))
# #         i=i+1
# #     btns.append(telebot.types.InlineKeyboardButton(text='назад', callback_data='nazad'))
# #     keyboard = telebot.types.InlineKeyboardMarkup()
# #     keyboard.add(*btns)
# #     return keyboard
#
# @bot.message_handler(commands=["start"])
# #главное меню
# def start(m):
#     key = telebot.types.InlineKeyboardMarkup()
#     key.add(telebot.types.InlineKeyboardButton(text='кнопка1', callback_data="butt1"))
#     key.add(telebot.types.InlineKeyboardButton(text='кнопка2', callback_data="butt2"))
#     msg=bot.send_message(m.chat.id, 'Нажми кнопку', reply_markup=inline())
#     telebot.logging.info(m.chat.id)
#
#
# @bot.callback_query_handler(func=lambda call: True)
# def inline(c):
#
#     if c.data=='butt1':
#         bot.edit_message_text(
#             chat_id=c.message.chat.id,
#             message_id=c.message.message_id,
#             text="нажата *кнопка 1*",
#             parse_mode="markdown")
#     elif c.data=='butt2':
#         bot.edit_message_text(
#             chat_id=c.message.chat.id,
#             message_id=c.message.message_id,
#             text="нажата *кнопка 2*",
#             parse_mode="markdown",
#             reply_markup=inline_key(5))
#     elif c.data=='nazad':
#         bot.edit_message_text(
#             chat_id=c.message.chat.id,
#             message_id=c.message.message_id,
#             text="нажата *кнопка 2*",
#             parse_mode="markdown",
#             reply_markup=inline_key(2))
#
# # keyboard1 = telebot.types.ReplyKeyboardMarkup()
# # keyboard1.row('ТЗ')
# keyboard1.row('Контрагент')
# keyboard1.row('Договор')
# keyboard1.row('Прочее')
#
#
# @bot.message_handler(commands=['start'])
# def start_message(message):
#     bot.send_message(message.chat.id, 'Привет, ты написал мне /start', reply_markup=keyboard1)
#
#
# @bot.message_handler(func=lambda message: message.text == u'ТЗ') #Если была вызвана ТЗ
# #Тут пишем метод который будет выполнятся, когда нажмём на кнопку
# def button(message):
#      bot.send_message(message.chat.id, 'ТЗ')
#
#      keyboard1.row('Поиск по номеру ТЗ')
#      keyboard1.row('Все активные ТЗ')
#      keyboard1.row('Прочее')
#
#
# @bot.message_handler(func=lambda message: message.text == u'Контрагент')  # Если была вызвана Button 1
#      # Тут пишем метод который будет выполнятся, когда нажмём на кнопку
# def button(message):
#     bot.send_message(message.chat.id, 'Контрагент')
#
#
# @bot.message_handler(content_types=['text'])
# def send_text(message):
#     if message.text.lower() == 'привет':
#         bot.send_message(message.chat.id, 'Привет, мой создатель')
#     elif message.text.lower() == 'пока':
#         bot.send_message(message.chat.id, 'Прощай, создатель')
#     elif message.text.lower() == 'я тебя люблю':
#         bot.send_sticker(message.chat.id, 'CAADAgADZgkAAnlc4gmfCor5YbYYRAI')
#
# @bot.message_handler(content_types=['sticker'])
# def sticker_id(message):
#     print(message)
# #
session = Session()
# session.auth = HTTPBasicAuth('MYUSERNAME', 'MYPASSWORD')
client = Client('http://ivaa/Test_Kvarta/ws/test?wsdl',
                    transport=Transport(session=session))

bot.polling()


